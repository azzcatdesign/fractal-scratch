{"version":3,"sources":["_reset.scss","_utilities.scss","tokens/_colors.scss","tokens/_spacers.scss","tokens/_typography.scss","_base.scss","fractal/colors.scss","tokens/_visual-treatments.scss"],"names":[],"mappings":"AAMA,2ZAaC,SACA,UACA,SACA,eACA,aACA,wBAGD,8EAEC,cAED,KACC,cAED,MACC,gBAED,aACC,YAED,oDAEC,WACA,aAED,MACC,yBACA,iBC/CD,UACE,kBAGF,sBACE,kBACA,8BACA,gBACA,mBAGF,QACE,aAGF,cACE,aACA,2BAGF,YACE,aACA,yBAGF,eACE,oBAGF,sBACE,kBACA,8BACA,gBACA,mBAGF,eACE,kBACA,QCmBF,MANE,uBACA,YACA,aACA,aAHA,sCACA,yBACA,yBACA,yBAHA,mCACA,sBACA,sBACA,sBAHA,mCACA,sBACA,sBACA,sBAHA,mCACA,sBACA,sBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,kCACA,sBACA,qBACA,sBAHA,iCACA,qBACA,oBACA,qBAHA,yBACA,YACA,aACA,eAuBA,iCACA,oCACA,uCACA,yCAGA,2CACA,oCACA,mCACA,yCACA,4CApCA,kCACA,oBACA,qBACA,oBAHA,mCACA,qBACA,uBACA,sBAHA,iCACA,mBACA,oBACA,mBAHA,oCACA,sBACA,uBACA,sBAHA,+BACA,kBACA,kBACA,kBA0DF,6CA7DE,mCACA,sBACA,sBACA,sBAHA,sCACA,wBACA,yBACA,wBAHA,yCACA,4BACA,4BACA,4BAHA,oCACA,uBACA,uBACA,uBAHA,wCACA,2BACA,2BACA,2BA6EA,kJAUF,uCA1FE,mCACA,sBACA,sBACA,sBAHA,oCACA,wBACA,uBACA,wBAHA,oCACA,uBACA,uBACA,uBAmGA,2GASF,oCA/GE,mCACA,sBACA,sBACA,sBAHA,sCACA,wBACA,yBACA,wBAHA,oCACA,uBACA,uBACA,uBAwHA,2GCtKF,MACE,mBACA,8CACA,4CACA,4CACA,4CACA,8BACA,4CACA,4CACA,4CACA,8CACA,qCAKA,kCACA,kCACA,kCACA,kCACA,kCAGA,yDACA,yDACA,yDAGA,yCACA,wCACA,0CACA,wCACA,wCCxCF,WACE,kBACA,oDACA,oBAGF,WACE,wBACA,8DAGF,WACE,wBACA,2DACA,gBAGF,WACE,oBACA,2DCnBF,KACE,UDqBe,KCpBf,YDwBiB,iCCvBjB,YDqBiB,ICpBjB,8BAGF,mBAGE,sBAGF,sCAKE,oBAQA,mBACE,6CACA,cACA,qBAEA,2CACE,aACA,mBACA,WACE,sDAIJ,2CACE,sCACA,mBACA,iCC1CN,aACE,aACA,mBACA,eACA,2BAGF,eACE,mBACA,aACA,mBACA,2BAGF,YACE,aACA,WACA,YACA,aACA,mBACA,uBACA,cCZoB,MDapB,mBACA,kBAME,+CACE,mCAGF,+CACE,uGAGF,+CACE,gCAGF,+CACE,gCAGF,+CACE,gCAGF,+CACE,gCAGF,+CACE,gCAGF,+CACE,gCAGF,+CACE,gCAGF,gDACE,gCAGF,gDACE,gCAGF,gDACE,+BAGF,gDACE,gCAGF,gDACE,sCAGF,iDACE,6BAOJ,oCACE,WACA,eAGF,uBACE,eAMA,iDACE,8BAGF,iDACE,8FAGF,iDACE,8FACA,6BAIJ,oCACE,6BAEA,mDACE,gCAGF,mDACE,mGAGF,mDACE,mGAIJ,iCACE,6BAEA,gDACE,6BAGF,gDACE,2FAGF,gDACE,2FAKF,mDACE,gCACA,6BAGF,mDACE,mGAGF,mDACE,oGACA,6BAKN,oBACE,mBAEA,sBACE,eAIA,+CACE,gCAGF,+CACE,mGAGF,+CACE,mGACA,6BAGF,+CACE,kCAGF,+CACE,iCAGF,+CACE","file":"fractal.css","sourcesContent":["\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n",".u-center {\n  text-align: center;\n}\n\n.u-screen-reader-only {\n  position: absolute;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.u-flex {\n  display: flex;\n}\n\n.u-flex-start {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.u-flex-end {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.u-inline-flex {\n  display: inline-flex;\n}\n\n.u-screen-reader-only {\n  position: absolute;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.u-push-down-1 {\n  position: relative;\n  top: 1px;\n}\n","/**\n * hsla = hue, saturation, lightness, alpha\n */\n\n// Alpha color mixin for custom property hsl values.\n// From https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables\n\n// return css color variable with different saturation value\n@function saturation($color, $saturationMultiplier){\n  $color: str-replace($color, 'var(');\n  $color: str-replace($color, ')');\n  $color-h: var(#{$color+'-h'});\n  $color-s: var(#{$color+'-s'});\n  $color-l: var(#{$color+'-l'});\n  @return hsl($color-h, calc(#{$color-s} * #{$saturationMultiplier}), $color-l);\n}\n\n// return css color variable with different lightness value\n@function lightness($color, $lightnessMultiplier){\n  $color: str-replace($color, 'var(');\n  $color: str-replace($color, ')');\n  $color-h: var(#{$color+'-h'});\n  $color-s: var(#{$color+'-s'});\n  $color-l: var(#{$color+'-l'});\n  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));\n}\n\n// return css color variable with different opacity value\n@function alpha($color, $opacity) {\n  $color: str-replace($color, 'var(');\n  $color: str-replace($color, ')');\n  $color-h: var(#{$color+'-h'});\n  $color-s: var(#{$color+'-s'});\n  $color-l: var(#{$color+'-l'});\n\n  @return hsla($color-h, $color-s, $color-l, $opacity);\n}\n\n// replace substring with another string\n// credits: https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n// Use a SASS mixin to define each color to generate hue, saturation and lightness values automatically in CSS.\n@mixin defineColorHSL($color, $hue, $saturation, $lightness) {\n  #{$color}: unquote(\"hsl(#{$hue}, #{$saturation}, #{$lightness})\");\n  #{$color}-h: #{$hue};\n  #{$color}-s: #{$saturation};\n  #{$color}-l: #{$lightness};\n}\n\n:root {\n  /* UI Hued Grays */\n\n  @include defineColorHSL(--black, 0, 0%, 0%);\n  @include defineColorHSL(--color-near-black, 223, 39%, 18%); // #1C2640\n  @include defineColorHSL(--color-gray-90, 223, 24%, 26%); // #323B52\n  @include defineColorHSL(--color-gray-80, 223, 17%, 34%); // #474F64\n  @include defineColorHSL(--color-gray-70, 223, 12%, 41%); // #5D6476\n  @include defineColorHSL(--color-gray-60, 224, 9%, 49%); // #717687\n  @include defineColorHSL(--color-gray-50, 223, 8%, 56%); // #878C99\n  @include defineColorHSL(--color-gray-40, 223, 8%, 64%); // #9DA1AB\n  @include defineColorHSL(--color-gray-30, 228, 7%, 72%); // #B3B5BD\n  @include defineColorHSL(--color-gray-20, 223, 7%, 80%); // #C8CACF\n  @include defineColorHSL(--color-gray-10, 210, 6%, 87%); // #DDDFE1\n  @include defineColorHSL(--color-gray-5, 210, 5%, 91%); // #E8E9EA\n  @include defineColorHSL(--white, 0, 0%, 100%);\n\n  /* Color vars mapped to semantic vars */\n\n  // General Backgrounds\n  --color-bg-default: var(--white);\n  --color-bg-gray: hsl(220, 16%, 96%); // #F4F5F7\n  --color-bg-gray-light: hsl(0, 0%, 98%); // #FAFAFA\n  --color-bg-dark: var(--color-near-black);\n\n  // Text\n  --color-text-body: var(--color-near-black);\n  --color-text-lightest: var(--white);\n  --color-text-darkest: var(--black);\n  --color-text-quiet: var(--color-gray-60);\n  --color-text-title: var(--color-near-black);\n\n  /* Application Colors */\n\n  // Alert\n  @include defineColorHSL(--color-alert, 335, 100%, 43%);  // #DD005D, AA pass\n\n  // Caution\n  @include defineColorHSL(--color-caution, 46, 100%, 50%);  // #FFC400, AA fail\n\n  // Info\n  @include defineColorHSL(--color-info, 195, 100%, 48%); // #00B9F4, AA fail\n\n  // Success\n  @include defineColorHSL(--color-success, 173, 100%, 37%); // #00BBA5, AA fail\n\n  // Tag\n  @include defineColorHSL(--color-tag, 183, 54%, 85%); // #c6ecee\n}\n\n/**\n * Color Theming Options\n */\n\n// Default Color Theme. Brighter tones than neutral theme.\n:root,\n[data-color-theme=\"color-theme-default\"] {\n\n  // Primary color-theme-default\n  @include defineColorHSL(--color-primary, 223, 84%, 50%); // #1450EB\n\n  // Secondary color-theme-default\n  @include defineColorHSL(--color-secondary, 189, 100%, 28%); // #00798F\n\n  // Secondary Alt color-theme-default\n  @include defineColorHSL(--color-secondary-alt, 196, 72%, 39%); // #1C84AB\n\n  // Tertiary color-theme-default\n  @include defineColorHSL(--color-tertiary, 261, 88%, 30%); // #380990\n\n  // Tertiary Alt color-theme-default\n  @include defineColorHSL(--color-tertiary-alt, 260, 50%, 34%); // #482B80\n\n  // Gradient color-theme-default\n  --color-gradient:\n    linear-gradient(\n      270.17deg,\n      var(--color-secondary) 0.27%,\n      var(--color-secondary-alt) 27.79%,\n      var(--color-tertiary-alt) 99.97%\n    );\n}\n\n// Neutral Color Theme\n[data-color-theme=\"color-theme-neutral\"] {\n\n  // Primary color-theme-neutral\n  @include defineColorHSL(--color-primary, 223, 49%, 52%); // #496BC0\n\n  // Secondary color-theme-neutral\n  @include defineColorHSL(--color-secondary, 221, 8%, 53%); // #7D8390, AA Fail\n\n  // Tertiary color-theme-neutral\n  @include defineColorHSL(--color-tertiary, 223, 25%, 40%); // #4C5B80\n\n  // Gradient color-theme-neutral\n  --color-gradient:\n    linear-gradient(\n      270.17deg,\n      var(--color-secondary) 0.27%,\n      var(--color-tertiary) 99.97%\n    );\n}\n\n// Teal Color Theme\n[data-color-theme=\"color-theme-teal\"] {\n\n  // Primary color-theme-teal\n  @include defineColorHSL(--color-primary, 223, 96%, 42%); // #043DD3\n\n  // Secondary color-theme-teal\n  @include defineColorHSL(--color-secondary, 189, 100%, 28%); // #00798F\n\n  // Tertiary color-theme-teal\n  @include defineColorHSL(--color-tertiary, 201, 63%, 30%); // #1C5B7D\n\n  // Gradient color-theme-teal\n  --color-gradient:\n    linear-gradient(\n      270.17deg,\n      var(--color-secondary) 0.27%,\n      var(--color-tertiary) 99.97%\n    );\n}\n","/**\n * @tokens Spacing\n */\n\n/* Based on https://codyhouse.co/ds/globals/spacing. Fibonacci sequence\n * Note: if you use 'em' the spacing will scale with font-size.\n * Use 'rem' for static sizing.\n */\n:root {\n  --space-base: 1rem; // 16px\n  --space-xxxs: calc(0.125 * var(--space-base)); // 2px\n  --space-xxs: calc(0.25 * var(--space-base)); // 4px\n  --space-xs: calc(0.375 * var(--space-base)); // 6px\n  --space-sm: calc(0.625 * var(--space-base)); // 10px\n  --space-md: var(--space-base); // 16px\n  --space-lg: calc(1.625 * var(--space-base)); // 26px\n  --space-xl: calc(2.625 * var(--space-base)); // 42px\n  --space-xxl: calc(4.25 * var(--space-base)); // 68px\n  --space-xxxl: calc(6.875 * var(--space-base)); // 110px\n  --component-padding: var(--space-md);\n\n  // Tokens for common padding and margins. See https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62\n\n  // Padding, all sides equal\n  --space-inset-xs: var(--space-xs); // padding: 6px\n  --space-inset-sm: var(--space-sm); // padding: 10px\n  --space-inset-md: var(--space-md); // padding: 16px\n  --space-inset-lg: var(--space-lg); // padding: 26px\n  --space-inset-xl: var(--space-xl); // padding: 36px\n\n  // Padding, lesser space top & bottom, see https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62\n  --space-inset-squish-sm: var(--space-sm) var(--space-md); // padding: 10px 16px\n  --space-inset-squish-md: var(--space-md) var(--space-lg); // padding: 16px 26px\n  --space-inset-squish-lg: var(--space-lg) var(--space-xl); // padding: 26px 42px\n\n  // Bottom margins for stacking\n  --space-stack-xs: 0 0 var(--space-3xs 0); // margin-bottom: 6px\n  --space-stack-sm: 0 0 var(--space-xs 0); // margin-bottom: 10px\n  --space-stack-md: 0 0 var(--space-base 0); // margin-bottom: 16px\n  --space-stack-lg: 0 0 var(--space-lg 0); // margin-bottom: 26px\n  --space-stack-xl: 0 0 var(--space-xl 0); // margin-bottom: 42px\n}\n","@font-face {\n  font-family: Inter;\n  src: url('../fonts/Inter.var.woff2') format('woff2');\n  font-weight: 100 900;\n}\n\n@font-face {\n  font-family: Roboto Mono;\n  src: url('../fonts/RobotoMono-Regular.ttf') format('truetype');\n}\n\n@font-face {\n  font-family: Roboto Mono;\n  src: url('../fonts/RobotoMono-Bold.ttf') format('truetype');\n  font-weight: 700;\n}\n\n@font-face {\n  font-family: Raleway;\n  src: url('../fonts/Raleway-Regular.ttf') format('truetype');\n}\n\n$font-size-body: 100%;\n\n$line-height-body: 1.5;\n\n$font-family-text: Inter, Helvetica, Arial, sans-serif;\n$font-family-display: Raleway, Trebuchet MS, sans-serif;\n$font-family-code: \"Roboto Mono\", monospace;\n\n/// Type Specs\n/// A map of type specs, with a name and any of the following values:\n///   - 'size': a list containing font size and line height, unitless\n///   - 'weight': font-weight\n///   - 'letter-spacing': letter-spacing\n///   - 'family': font-family\n$type-specs: (\n  'body-featured': (\n    'size': [19, 24],\n  ),\n  'body-single-line': (\n    'size': [16, 16],\n  ),\n  'button': (\n    'size': [16, 16],\n    'weight': 500,\n  ),\n  'button--small': (\n    'size': [15, 15], // OK for odd line-height, as it's all centered within 40px tall button.\n    'weight': 500,\n  ),\n  'body-single-line--emphasis': (\n    'size': [16, 16],\n    'weight': 500,\n  ),\n  'body-small': (\n    'size': [14, 18],\n  ),\n  'body-small-single-line': (\n    'size': [14, 14],\n  ),\n  'input-hint': (\n    'size': [13, 18],\n  ),\n  'input-label': (\n    'size': [14, 20],\n  ),\n  'input': (\n    'size': [16, 20],\n  ),\n  'menu-list-item': (\n    'size': [17, 22],\n  ),\n  'modal-title': (\n    'size': [24, 24],\n    'weight': 500\n  ),\n  'navbar-item': (\n    'size': [16, 22],\n  ),\n  'page-section-title': (\n    'size': [22, 32],\n  ),\n  'page-title': (\n    'size': [24, 36],\n  ),\n  'page-title-single-line': (\n    'size': [24, 24],\n  ),\n  'record-title': (\n    'size': [22, 24],\n  ),\n  'record-title-small': (\n    'size': [18, 18],\n  ),\n);\n\n@mixin type($name) {\n  $-type-spec: map-get($type-specs, $name);\n\n  @if map-get($-type-spec, 'weight') {\n    font-weight: map-get($-type-spec, 'weight');\n  }\n\n  @if map-get($-type-spec, 'size') {\n    $-font-size: nth(map-get($-type-spec, 'size'), 1);\n\n    font-size: $-font-size / 16 * 1rem;\n    line-height: nth(map-get($-type-spec, 'size'), 2) / $-font-size;\n  }\n\n  @if map-get($-type-spec, 'letter-spacing') {\n    letter-spacing: map-get($-type-spec, 'letter-spacing');\n  }\n\n  @if map-get($-type-spec, 'family') {\n    font-family: map-get($-type-spec, 'family');\n  }\n}\n","body {\n  font-size: $font-size-body;\n  font-family: $font-family-text;\n  line-height: $line-height-body;\n  color: var(--color-near-black);\n}\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; // Make sure our font rules win\n}\n\n// Inline Links\np,\nol,\nul,\ndl {\n  a {\n    border-bottom: 1px solid var(--color-primary);\n    color: inherit;\n    text-decoration: none;\n\n    &:focus {\n      outline: none;\n      border-bottom: none;\n      box-shadow:\n        0 0 0 2px var(--white),\n        0 0 0 4px var(--color-primary);\n    }\n\n    &:hover {\n      background-color: var(--color-primary);\n      border-bottom: none;\n      color: var(--color-text-lightest);\n    }\n  }\n}\n\n",".color-group {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.color-variant {\n  margin-bottom: 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.color-chip {\n  margin: 0.5rem;\n  width: 7rem;\n  height: 7rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: $border-radius-round;\n  color: var(--white);\n  text-align: center;\n}\n\n// Grays\n.color-group--grays {\n  .color-chip {\n    &:nth-of-type(1) {\n      background: var(--color-near-black);\n    }\n\n    &:nth-of-type(2) {\n      background: alpha(var(--color-near-black), 0.95);\n    }\n\n    &:nth-of-type(3) {\n      background: var(--color-gray-90);\n    }\n\n    &:nth-of-type(4) {\n      background: var(--color-gray-80);\n    }\n\n    &:nth-of-type(5) {\n      background: var(--color-gray-70);\n    }\n\n    &:nth-of-type(6) {\n      background: var(--color-gray-60);\n    }\n\n    &:nth-of-type(7) {\n      background: var(--color-gray-50);\n    }\n\n    &:nth-of-type(8) {\n      background: var(--color-gray-40);\n    }\n\n    &:nth-of-type(9) {\n      background: var(--color-gray-30);\n    }\n\n    &:nth-of-type(10) {\n      background: var(--color-gray-20);\n    }\n\n    &:nth-of-type(11) {\n      background: var(--color-gray-10);\n    }\n\n    &:nth-of-type(12) {\n      background: var(--color-gray-5);\n    }\n\n    &:nth-of-type(13) {\n      background: var(--color-bg-gray);\n    }\n\n    &:nth-of-type(14) {\n      background: var(--color-bg-gray-light);\n    }\n\n    &:nth-of-type(n+8) {\n      color: var(--color-text-body);\n    }\n  }\n}\n\n// Status colors\n.color-group--status {\n  .color-variant {\n    width: 100%;\n    flex-wrap: wrap;\n  }\n\n  p {\n    min-width: 10ch;\n  }\n}\n\n.color-chip {\n  .color-variant--alert & {\n    &:nth-of-type(1) {\n      background: var(--color-alert);\n    }\n\n    &:nth-of-type(2) {\n      background: lightness(var(--color-alert), 0.88);\n    }\n\n    &:nth-of-type(3) {\n      background: lightness(var(--color-alert), 2.25);\n      color: var(--color-text-body);\n    }\n  }\n\n  .color-variant--caution & {\n    color: var(--color-text-body);\n\n    &:nth-of-type(1) {\n      background: var(--color-caution);\n    }\n\n    &:nth-of-type(2) {\n      background: lightness(var(--color-caution), 0.9);\n    }\n\n    &:nth-of-type(3) {\n      background: lightness(var(--color-caution), 1.9);\n    }\n  }\n\n  .color-variant--info & {\n    color: var(--color-text-body);\n\n    &:nth-of-type(1) {\n      background: var(--color-info);\n    }\n\n    &:nth-of-type(2) {\n      background: lightness(var(--color-info), 0.83);\n    }\n\n    &:nth-of-type(3) {\n      background: lightness(var(--color-info), 1.98);\n    }\n  }\n\n  .color-variant--success & {\n    &:nth-of-type(1) {\n      background: var(--color-success);\n      color: var(--color-text-body);\n    }\n\n    &:nth-of-type(2) {\n      background: lightness(var(--color-success), 0.8);\n    }\n\n    &:nth-of-type(3) {\n      background: lightness(var(--color-success), 2.57);\n      color: var(--color-text-body);\n    }\n  }\n}\n\n.color-group--theme {\n  margin-bottom: 2rem;\n\n  p {\n    min-width: 16ch;\n  }\n\n  .color-chip {\n    &:nth-of-type(1) {\n      background: var(--color-primary);\n    }\n\n    &:nth-of-type(2) {\n      background: lightness(var(--color-primary), 0.8);\n    }\n\n    &:nth-of-type(3) {\n      background: lightness(var(--color-primary), 1.8);\n      color: var(--color-text-body);\n    }\n\n    &:nth-of-type(4) {\n      background: var(--color-secondary);\n    }\n\n    &:nth-of-type(5) {\n      background: var(--color-tertiary);\n    }\n\n    &:nth-of-type(6) {\n      background: var(--color-gradient);\n    }\n  }\n}\n","/**\n * Border Radius\n */\n\n$border-radius-xs: 1px;\n$border-radius-sm: 3px;\n$border-radius-md: 6px;\n$border-radius-lg: 9px;\n$border-radius-xl: 12px;\n$border-radius-round: 999em;\n\n/*\n * Shadows\n * Double shadows for richness and UI harmony\n */\n\n// Set the stacked shadows\n$shadow-sm: 0 2px 4px 0 alpha(var(--color-near-black), 0.1), 0 1px 3px alpha(var(--color-near-black), 0.15);\n$shadow-md: 0 8px 12px 0 alpha(var(--color-near-black), 0.1), 0 4px 12px 0 alpha(var(--color-near-black), 0.15);\n$shadow-lg: 0 6px 20px 0 alpha(var(--color-near-black), 0.1), 0 4px 20px 0 alpha(var(--color-near-black), 0.15);\n\n/**\n * Transition\n * See https://marvelapp.com/styleguide/design/animation for demos\n */\n\n/* Timing */\n// \"transition duration\" = \"trans-dur\"\n$trans-dur-base: 0.15s;\n\n/* Easing */\n\n// No curve. Good for color/opacity fades\n// \"transition-timing-function\" = \"trans-tm-function\"\n$trans-tm-function-linear: linear;\n\n// Slight curve. Good for subtle transitions\n$trans-tm-function-ease: ease;\n\n// Starts fast and decelerates as it progresses\n$trans-tm-function-cb-scaleIn: cubic-bezier(0, 0.89, 0.44, 1);\n\n// Starts slow and accelerates as it progresses\n$trans-tm-function-cb-scaleOut: cubic-bezier(0.165, 0.84, 0.44, 1);\n\n// Springy feel. Good for drawing focus\n$trans-tm-function-cb-scaleUp: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n"]}